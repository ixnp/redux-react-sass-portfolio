{"ast":null,"code":"import _defineProperty from \"/Users/iprocopios/Projects/Redux-Portfolio/redux-react-sass-portfolio/portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { toggleNav } from '../actions';\nconst initalState = {\n  projectsItems: {\n    project: {\n      1: {\n        name: 'proj1',\n        description: 'bsakdfjhds',\n        img: {\n          big: '',\n          med: '',\n          small: ''\n        }\n      }\n    },\n    selectedProject: 0\n  },\n  skills: {},\n  navDisplay: 'closed',\n  contactDisplay: false,\n  form: {},\n  graphType: {}\n};\nexport const reducers = (state = initalState, action) => {\n  switch (action.type) {\n    case 'TOGGLE_CLOSE':\n      {\n        return _objectSpread({}, state, {\n          navDisplay: 'closed'\n        });\n      }\n\n    case 'TOGGLE_OPEN':\n      {\n        return _objectSpread({}, state, {\n          navDisplay: action.payload\n        });\n      }\n\n    case 'FORM_VALUE':\n      {\n        return _objectSpread({}, state, {\n          form: action.payload\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};","map":{"version":3,"sources":["/Users/iprocopios/Projects/Redux-Portfolio/redux-react-sass-portfolio/portfolio/src/reducers/index.js"],"names":["toggleNav","initalState","projectsItems","project","name","description","img","big","med","small","selectedProject","skills","navDisplay","contactDisplay","form","graphType","reducers","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,SAAR,QAAwB,YAAxB;AACA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,aAAa,EAAE;AACXC,IAAAA,OAAO,EAAE;AACL,SAAG;AACCC,QAAAA,IAAI,EAAE,OADP;AAECC,QAAAA,WAAW,EAAE,YAFd;AAGCC,QAAAA,GAAG,EAAC;AACAC,UAAAA,GAAG,EAAE,EADL;AAEAC,UAAAA,GAAG,EAAE,EAFL;AAGAC,UAAAA,KAAK,EAAE;AAHP;AAHL;AADE,KADE;AAYXC,IAAAA,eAAe,EAAE;AAZN,GADC;AAehBC,EAAAA,MAAM,EAAE,EAfQ;AAgBhBC,EAAAA,UAAU,EAAE,QAhBI;AAiBhBC,EAAAA,cAAc,EAAE,KAjBA;AAkBhBC,EAAAA,IAAI,EAAE,EAlBU;AAmBhBC,EAAAA,SAAS,EAAC;AAnBM,CAApB;AAsBA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAChB,WAAP,EAAoBiB,MAApB,KAA+B;AACnD,UAAOA,MAAM,CAACC,IAAd;AAEI,SAAK,cAAL;AAAqB;AAGjB,iCACOF,KADP;AACcL,UAAAA,UAAU,EAAE;AAD1B;AAGH;;AACD,SAAK,aAAL;AAAoB;AAEhB,iCACOK,KADP;AACcL,UAAAA,UAAU,EAAEM,MAAM,CAACE;AADjC;AAGH;;AACD,SAAK,YAAL;AAAoB;AAChB,iCACOH,KADP;AACcH,UAAAA,IAAI,EAAEI,MAAM,CAACE;AAD3B;AAGH;;AAED;AAAS;AACL,eAAOH,KAAP;AACH;AAvBL;AA4BH,CA7BM","sourcesContent":["import {toggleNav} from '../actions'\nconst initalState = {\n    projectsItems: {\n        project: {\n            1: {\n                name: 'proj1',\n                description: 'bsakdfjhds',\n                img:{\n                    big: '',\n                    med: '',\n                    small: ''\n                } \n            }\n        },\n        selectedProject :0\n    },\n    skills: {},\n    navDisplay: 'closed',\n    contactDisplay: false,\n    form: {},\n    graphType:{}\n}\n\nexport const reducers = (state=initalState, action) => {\n    switch(action.type){  \n        \n        case 'TOGGLE_CLOSE': {\n            \n    \n            return {\n                ...state, navDisplay: 'closed'\n            }\n        }\n        case 'TOGGLE_OPEN': {\n            \n            return {\n                ...state, navDisplay: action.payload\n            }\n        }\n        case 'FORM_VALUE' : {\n            return {\n                ...state, form: action.payload\n            }\n        }\n     \n        default :{\n            return state;\n        }\n     \n    }\n     \n    \n}"]},"metadata":{},"sourceType":"module"}